# Override file for development
# This file is automatically loaded by docker-compose
# Use this to override settings for local development

version: "3.9"

services:
  # Override for development with auto reload
  user-services:
    build:
      context: ../user-services
      dockerfile: Dockerfile.dev
    environment:
      - GIN_MODE=debug
    volumes:
      - ../user-services:/app
      - /app/vendor  # Exclude vendor directory

  # Override for lesson-services with auto reload
  lesson-services:
    build:
      context: ../lesson-services
      dockerfile: Dockerfile.dev
    container_name: lesson-services
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lesson.rule=PathPrefix(`/api/lesson/v1`)"
      - "traefik.http.services.lesson.loadbalancer.server.port=8005"
      # Path rewriting middleware using regex
      - "traefik.http.middlewares.lesson-replacepathregex.replacepathregex.regex=^/api/lesson/(.*)"
      - "traefik.http.middlewares.lesson-replacepathregex.replacepathregex.replacement=/api/$1"
      - "traefik.http.routers.lesson.middlewares=lesson-replacepathregex@docker"
    ports:
      - "${LESSON_SERVICES_PORT:-8005}:8005"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-password}
      - DB_NAME=${POSTGRES_DB:-english_app}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER:-user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-password}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST:-/}
    volumes:
      - ../lesson-services:/app
      - /app/__pycache__  # Exclude Python cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      user-services:
        condition: service_started

  # Override for content-services with auto reload
  content-services:
    build:
      context: ../content-services
      dockerfile: Dockerfile.dev
    container_name: content-services
    restart: always
    networks:
      - frontend
      - backend
    ports:
      - "${CONTENT_SERVICES_PORT:-8004}:8004"
    environment:
      - PORT=8004
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-password}
      - DB_NAME=${POSTGRES_DB:-english_app}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER:-user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-password}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST:-/}
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=content
    volumes:
      - ../content-services:/app
      - /app/vendor  # Exclude vendor directory
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started

  # Override for notification-services with auto reload
  notification-services:
    build:
      context: ../notification-services
      dockerfile: Dockerfile.dev
    container_name: notification-services
    restart: always
    ports:
      - "${NOTIFICATION_SERVICES_PORT:-8003}:8003"
    environment:
      - PORT=8003
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER:-user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-password}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST:-/}
    volumes:
      - ../notification-services:/app
      - /app/node_modules  # Exclude node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy


  bff-services:
    build:
      context: ../bff-services
      dockerfile: Dockerfile.dev
    container_name: bff-services
    restart: always

  # Development database with more verbose logging
  postgres:
    environment:
      - POSTGRES_LOG_STATEMENT=all
      - POSTGRES_LOG_MIN_DURATION_STATEMENT=0
